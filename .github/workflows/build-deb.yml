name: Build Deb Package from Install Command

run-name: FPM Deb Builder ${{ github.event.inputs.package }} ${{ github.event.inputs.version }} for ${{ github.event.inputs.baseimage }} invoked by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      upload_to_aptly:
        description: 'upload to Aptly?'
        type: 'boolean'
        required: true
        default: "false"
      package:
        description: 'package to generate'
        required: false
        default: ""
      version:
        description: 'version to build (e.g. 0.0.1)'
        required: false
        default: ""
      command:
        description: 'command to build the package, or the URL to download a YAML config file from'
        required: true
        default: "https://raw.githubusercontent.com/LCAS/docker-fpm/main/test.yaml"
      deps:
        description: 'Ubuntu dependencies for package'
        required: false
        default: ""
      baseimage:
        description: 'Ubuntu release for package'
        required: true
        default: "jammy"
jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: AutoModality/action-clean@v1
    - uses: actions/checkout@v3

    - name: Build it
      run: |
        cd ${GITHUB_WORKSPACE}
        ${GITHUB_WORKSPACE}/make-deb.sh \
          -v "${{ github.event.inputs.version }}" \
          -c "${{ github.event.inputs.command }}" \
          -d "${{ github.event.inputs.deps }}" \
          -b "ubuntu:${{ github.event.inputs.baseimage }}" \
          -p "${{ github.event.inputs.package }}"
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.inputs.package }}-${{ github.event.inputs.version }}.deb
        path: ./output/*.deb
    - name: "upload to Aptly repo and make available at staging"
      if: ${{ github.event.inputs.upload_to_aptly }}
      run: |
        APTLY_API="https://lcas.lincoln.ac.uk/apt/api"
        folder=`mktemp -u tmp.XXXXXXXXXXXXXXX`
        repo=lcas_ros
        files=`find ${{ github.workspace }}/output -name "*.deb"`
        echo "::group::upload to Aptly"
        for f in $files; do
          echo "Uploading $f..."
          curl -fsS -X POST -F "file=@$f" -u lcas:${{ secrets.APTLY_TOKEN }} $APTLY_API/files/$folder
        done
        echo "updating repo with files in $folder"
        curl -fsS -X POST -u lcas:${{ secrets.APTLY_TOKEN }} $APTLY_API/repos/$repo/file/$folder
        echo "Updating published staging repo..."
        curl  -X PUT -H 'Content-Type: application/json' --data "{\"ForceOverwrite\": true, \"SourceKind\": \"local\", \"Sources\": [{\"Name\": \"$repo\"}]}" -u lcas:${{ secrets.APTLY_TOKEN }} "$APTLY_API/publish/staging/${{ github.event.inputs.baseimage }}"
        echo "::endgroup::"
    - name: "list all outputs"
      run: |
        echo "::group::All outputs"
        ls -lR ${{ github.workspace }}/output
        echo "::endgroup::"
    - name: "copy from staging to lcas"
      run: |
        APTLY_API="https://lcas.lincoln.ac.uk/apt/api"
        repo=lcas_ros
        echo "::group::copy from staging to lcas"
        curl  -X PUT -H 'Content-Type: application/json' --data "{\"ForceOverwrite\": true, \"SourceKind\": \"local\", \"Sources\": [{\"Name\": \"$repo\"}]}" -u lcas:${{ secrets.APTLY_TOKEN }} $APTLY_API/publish/lcas/${{ github.event.inputs.baseimage }}
    - name: "list packages"
      run: |
        echo "::group::Packages in lcas/amd64"
        curl -s https://lcas.lincoln.ac.uk/apt/staging/dists/jammy/lcas/binary-amd64/Packages | grep  "^Package: \|^Version: " | sed 's/^Package: //' | sed 's/^Version: /  -> /'
        echo "::endgroup::"
   